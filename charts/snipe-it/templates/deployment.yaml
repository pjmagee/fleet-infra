apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "snipe-it.fullname" . }}
  labels:
    {{- include "snipe-it.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "snipe-it.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "snipe-it.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "snipe-it.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: Europe/London
            - name: APP_LOCALE
              value: en-GB
            - name: APP_KEY
              value: "{{ .Values.appKey }}"
            - name: APP_URL
              value: "{{ .Values.appUrl }}"
            - name: APP_FORCE_TLS
              value: "false"
            - name: MYSQL_PORT_3306_TCP_ADDR
              value: "{{ .Values.mysql.host }}"
            - name: MYSQL_PORT_3306_TCP_PORT
              value: "{{ .Values.mysql.port }}"
            - name: MYSQL_DATABASE
              value: "{{ .Values.mysql.database }}"
            - name: MYSQL_USER
              value: "{{ .Values.mysql.user }}"
            - name: MYSQL_PASSWORD
              value: "{{ .Values.mysql.password }}"

          volumeMounts:
            - name: config
              mountPath: /config
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

        - name: mysql
          image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
          imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.mysql.port }}
              name: mysql
          env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MYSQL_DATABASE
              value: "{{ .Values.mysql.database }}"
            - name: MYSQL_USER
              value: "{{ .Values.mysql.user }}"
            - name: MYSQL_PASSWORD
              value: "{{ .Values.mysql.password }}"
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}