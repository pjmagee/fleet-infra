apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "asa-server.fullname" . }}
  labels:
    {{- include "asa-server.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "asa-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "asa-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.serviceAccount.name }}
      serviceAccountName: {{ . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # Init container to download ARK server binaries
      initContainers:
        - name: ark-updater
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/entrypoint.sh"]
          args: ["update"]
          volumeMounts:
            - name: ark-binaries
              mountPath: /ark/binaries
            - name: ark-instance
              mountPath: /ark/instance
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # Zerschranzer entrypoint command and args
          command: ["/entrypoint.sh"]
          args: 
            - "run"
            # ARK server map and session settings (single argument)
            - >-
              {{ .Values.server.mapName }}?listen
              ?SessionName={{ .Values.server.serverName | replace " " "%20" }}
              {{- if .Values.server.serverPassword }}?ServerPassword={{ .Values.server.serverPassword }}{{- end }}
              ?ServerAdminPassword={{ .Values.server.serverAdminPassword }}
              ?AltSaveDirectoryName={{ .Values.server.saveDir }}
              ?RCONEnabled=True
              ?Port={{ .Values.server.ports.game }}
              ?QueryPort={{ .Values.server.ports.query }}
              ?RCONPort={{ .Values.server.ports.rcon }}
              ?MaxPlayers={{ .Values.server.maxPlayers }}
              {{- if .Values.server.clusterID }}?ClusterDirOverride=/ark/cluster?ClusterId={{ .Values.server.clusterID }}{{- end }}
            # Additional server flags
            {{- if .Values.server.customStartParameters }}
            {{- range (split " " .Values.server.customStartParameters) }}
            {{- if . }}
            - {{ . | quote }}
            {{- end }}
            {{- end }}
            {{- else }}
            - "-NoBattlEye"
            - "-crossplay"  
            - "-NoHangDetection"
            {{- end }}
            {{- if .Values.server.modIDs }}
            - "-mods={{ .Values.server.modIDs }}"
            {{- end }}
            - "-server"
            - "-log"
          ports:
            - name: game-tcp
              containerPort: {{ .Values.server.ports.game }}
              protocol: TCP
              {{- if .Values.hostPort.enabled }}
              hostPort: {{ .Values.server.ports.game }}
              {{- end }}
            - name: game-udp
              containerPort: {{ .Values.server.ports.game }}
              protocol: UDP
              {{- if .Values.hostPort.enabled }}
              hostPort: {{ .Values.server.ports.game }}
              {{- end }}
            - name: query-udp
              containerPort: {{ .Values.server.ports.query }}
              protocol: UDP
              {{- if .Values.hostPort.enabled }}
              hostPort: {{ .Values.server.ports.query }}
              {{- end }}
            - name: rcon
              containerPort: {{ .Values.server.ports.rcon }}
              protocol: TCP
              {{- if .Values.hostPort.enabled }}
              hostPort: {{ .Values.server.ports.rcon }}
              {{- end }}
          env:
            # Timezone (set to UTC as default for containers)
            - name: TZ
              value: {{ .Values.timezone | default "UTC" | quote }}
            # UMASK for file permissions
            - name: UMASK
              value: "0007"
            
            # Extra environment variables (for custom configuration)
            {{- range .Values.extraEnvVars }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - |
                  # Check if ARK server process is running (Zerschranzer uses Proton)
                  pgrep -f "ArkAscendedServer.exe" > /dev/null
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
            successThreshold: {{ .Values.probes.startup.successThreshold }}
          {{- end }}
          
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - |
                  # Check if ARK server process is running
                  pgrep -f "ArkAscendedServer.exe" > /dev/null
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            successThreshold: {{ .Values.probes.liveness.successThreshold }}
          {{- end }}
          
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - |
                  # Check if server is listening on the game port using netstat
                  netstat -ln | grep -q ":{{ .Values.server.ports.game }} "
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
          {{- end }}
          
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          
          volumeMounts:
            # ARK server binaries volume (shared)
            - name: ark-binaries
              mountPath: /ark/binaries
            # Instance-specific data (configs, saves, logs)
            - name: ark-instance
              mountPath: /ark/instance
            # Configuration files from ConfigMap
            - name: config
              mountPath: /ark/instance/Game.ini
              subPath: Game.ini
            - name: config
              mountPath: /ark/instance/GameUserSettings.ini
              subPath: GameUserSettings.ini
            {{- if .Values.server.clusterID }}
            # Cluster data volume
            - name: ark-cluster
              mountPath: /ark/cluster
            {{- end }}
      
      volumes:
        # Configuration files ConfigMap
        - name: config
          configMap:
            name: {{ include "asa-server.fullname" . }}-config
            defaultMode: 0644
        # ARK server binaries volume (shared between instances)
        - name: ark-binaries
          {{- if and .Values.persistence.enabled (eq .Values.persistence.type "hostPath") }}
          hostPath:
            path: {{ .Values.persistence.hostPaths.binaries }}
            type: DirectoryOrCreate
          {{- else if and .Values.persistence.enabled (eq .Values.persistence.type "pvc") }}
          persistentVolumeClaim:
            claimName: {{ include "asa-server.fullname" . }}-binaries
          {{- else }}
          emptyDir: {}
          {{- end }}
        # Instance-specific data volume (configs, saves, logs)
        - name: ark-instance
          {{- if and .Values.persistence.enabled (eq .Values.persistence.type "hostPath") }}
          hostPath:
            path: {{ .Values.persistence.hostPaths.instance }}
            type: DirectoryOrCreate
          {{- else if and .Values.persistence.enabled (eq .Values.persistence.type "pvc") }}
          persistentVolumeClaim:
            claimName: {{ include "asa-server.fullname" . }}-instance
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.server.clusterID }}
        # Cluster data volume (shared between clustered instances)
        - name: ark-cluster
          {{- if and .Values.persistence.enabled (eq .Values.persistence.type "hostPath") }}
          hostPath:
            path: {{ .Values.persistence.hostPaths.cluster | default (printf "%s/clusters/%s" (.Values.persistence.hostPaths.binaries | dir) .Values.server.clusterID) }}
            type: DirectoryOrCreate
          {{- else if and .Values.persistence.enabled (eq .Values.persistence.type "pvc") }}
          persistentVolumeClaim:
            claimName: {{ include "asa-server.fullname" . }}-cluster
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
